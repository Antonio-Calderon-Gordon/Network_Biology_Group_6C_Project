# Network and Drug Analysis

pw.id <- "WP4172"
RCy3::commandsRun(paste0('wikipathways import-as-network id=',pw.id)) 

# load the data into Cytoscape (columns get added at the bottom)
loadTableData(data, data.key.column = "GeneID", table.key.column = "Ensembl")

# visualize the log2FC as a node fill color gradient
RCy3::setNodeColorMapping(table.column = 'log2FC', mapping.type = 'c', table.column.values = c(-1,0,1), colors = paletteColorBrewerRdBu, default.color = '#FFFFFF', style.name = 'WikiPathways-As-Network')

# Select significant genes and change border color
x <- RCy3::createColumnFilter('P.Value', 'P.Value', 0.05, "LESS_THAN")
RCy3::setNodeBorderColorBypass(x$nodes, new.colors = "#009900")
RCy3::setNodeBorderWidthBypass(x$nodes, new.sizes = 7)
RCy3::clearSelection()

# copied and adapted from Step 5 (at the end)

# Check if CyTargetLinker app is installed
if(!"name: CyTargetLinker, version: 4.1.0, status: Installed" %in% RCy3::getInstalledApps()) {
  RCy3::installApp("CyTargetLinker")
}


unzip(system.file("extdata","drugbank-5.1.0.xgmml.zip", package="rWikiPathways"), exdir = getwd())
drugbank <- file.path(getwd(), "drugbank-5.1.0.xgmml")

commandsRun(paste0('cytargetlinker extend idAttribute="GeneID" linkSetFiles="', drugbank, '"') )
commandsRun('cytargetlinker applyLayout network="current"')

my.drugs <- selectNodes("drug", by.col = "CTL.Type", preserve = FALSE)$nodes #easy way to collect node SUIDs by column value
clearSelection()
setNodeColorBypass(my.drugs, "#DD99FF")
setNodeShapeBypass(my.drugs, "hexagon")

drug.labels <- getTableColumns(columns=c("SUID","CTL.label"))
drug.labels <- na.omit(drug.labels)
mapply(function(x,y) setNodeLabelBypass(x,y), drug.labels$SUID, drug.labels$CTL.label)



f1 <- createColumnFilter("log2FC", "log2FC", 1, "GREATER_THAN")
f2 <- createColumnFilter("PValue", "PValue", 0.05, "LESS_THAN")
f3 <- createColumnFilter("log2FC", "log2FC", -1, "LESS_THAN")
f.drugs <- createColumnFilter("CTL.Type", "CTL.Type", "drug", "IS")

# select genes that fulfil both criteria
f <- union(f1$nodes, f3$nodes)
x <- intersect(f, f2$nodes)
f.final <- union(x, f.drugs$nodes)


#normal continuation
clearSelection()
selectNodes(f.final, by.col = "shared name")


createSubnetwork("selected", "all")

#normal continuation
clearSelection()
selectNodes(x, by.col = "shared name")
createSubnetwork("selected", "all")

